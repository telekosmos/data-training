{
	"name": "Ex 18 full",
	"properties": {
		"activities": [
			{
				"name": "Get Json Files Events",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "JsonFiles",
						"type": "DatasetReference",
						"parameters": {
							"folder": {
								"value": "@pipeline().parameters.eventsSourceFolder",
								"type": "Expression"
							},
							"filePattern": "*.json"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Json Files Events",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Json Files Events').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Run pipeline to convert JSON",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Ex 18 aux - Json 2 Parquet then Table",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceFolder": "OriginalFiles/Events",
									"stagingFolder": "StagingEvents",
									"sourceJsonFile": {
										"value": "@item().name",
										"type": "Expression"
									},
									"sinkTablename": {
										"value": "@pipeline().parameters.sinkTableName",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy to Database",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.eventsStagingFolder",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ParquetDirectory",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.eventsStagingFolder",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlGenericTable",
						"type": "DatasetReference",
						"parameters": {
							"Schema": {
								"value": "@pipeline().parameters.sinkTableSchema",
								"type": "Expression"
							},
							"Table": {
								"value": "@pipeline().parameters.sinkTableName",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"eventsSourceFolder": {
				"type": "string",
				"defaultValue": "OriginalFiles/Events"
			},
			"eventsStagingFolder": {
				"type": "string",
				"defaultValue": "StagingEvents"
			},
			"sinkTableSchema": {
				"type": "string",
				"defaultValue": "TTraining"
			},
			"sinkTableName": {
				"type": "string",
				"defaultValue": "Events"
			}
		},
		"folder": {
			"name": "data flow pipes"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-01T15:41:30Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}