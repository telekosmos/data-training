{
	"name": "Ex 18 - Json to Parquet to DB",
	"properties": {
		"activities": [
			{
				"name": "Get Json Files Events",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "JsonFiles",
						"type": "DatasetReference",
						"parameters": {
							"folder": {
								"value": "@pipeline().parameters.eventsSourceFolder",
								"type": "Expression"
							},
							"filePattern": "*.json"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "ForEach Json File Event",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Json Files Events",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Json Files Events').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Transform json arrays to valid parquet",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "dfJsonArray2Parquet",
									"type": "DataFlowReference",
									"parameters": {
										"jsonFilename": {
											"value": "'@{item().name}'",
											"type": "Expression"
										},
										"parquetTargetFolder": {
											"value": "'@{pipeline().parameters.eventsStagingFolder}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"source1": {
											"folder": {
												"value": "@pipeline().parameters.eventsSourceFolder",
												"type": "Expression"
											},
											"filePattern": {
												"value": "@item().name",
												"type": "Expression"
											}
										},
										"sinkParquet": {
											"container": "sources",
											"folder": {
												"value": "@pipeline().parameters.eventsStagingFolder",
												"type": "Expression"
											},
											"filename": "*"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "Copy data to DB",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach Json File Event",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ParquetDirectory",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.eventsStagingFolder",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlGenericTable",
						"type": "DatasetReference",
						"parameters": {
							"Schema": {
								"value": "@pipeline().parameters.sinkTableSchema",
								"type": "Expression"
							},
							"Table": {
								"value": "@pipeline().parameters.sinkTableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Delete Staging",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Copy data to DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ParquetDirectory",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.eventsStagingFolder",
								"type": "Expression"
							}
						}
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "AzureBlobStorage1",
							"type": "LinkedServiceReference"
						}
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"wildcardFileName": "*",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "ForEach json do backup",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Copy data to DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Json Files Events').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Backup Json Files",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "JsonFiles",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@pipeline().parameters.eventsSourceFolder",
											"type": "Expression"
										},
										"filePattern": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "JsonFiles",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat(pipeline().parameters.eventsSourceFolder, '/JsonEventsProcessed')",
											"type": "Expression"
										},
										"filePattern": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"eventsSourceFolder": {
				"type": "string"
			},
			"eventsStagingFolder": {
				"type": "string"
			},
			"sinkTableSchema": {
				"type": "string"
			},
			"sinkTableName": {
				"type": "string"
			}
		},
		"folder": {
			"name": "data flow pipes"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-02T11:36:40Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}