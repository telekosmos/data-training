{
	"name": "Ex14 Login ETL Bad",
	"properties": {
		"description": "Login -> staging data lake -> dest table -> move from data lake",
		"activities": [
			{
				"name": "Lookup last date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select coalesce(max([timestamp]), DATEFROMPARTS(1970, 1, 1)) as last_elem_date from [TTraining].[FactLogin]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlGeneric",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Copy new rows to file",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup last date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT ll.[id], ll.[user], ll.[timestamp]\nfrom [TTraining].[Login] ll\nwhere ll.[timestamp] > ''', activity('Lookup last date').output.firstRow.last_elem_date, '''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AzureSqlGeneric",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetLoginRawData",
						"type": "DatasetReference"
					}
				]
			}
		],
		"folder": {
			"name": "data flow pipes"
		},
		"annotations": [],
		"lastPublishTime": "2022-05-26T13:45:48Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}