{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "telekosmos"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/xlsx2csv-parquet-json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "one to rule them all",
				"activities": [
					{
						"name": "xlsx2csv_pipe1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_xlsx2csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceContainer": {
									"value": "@pipeline().parameters.SourceContainer",
									"type": "Expression"
								},
								"TargetContainer": {
									"value": "@pipeline().parameters.TargetContainer",
									"type": "Expression"
								},
								"SourcePrefix": {
									"value": "@pipeline().parameters.SourcePrefix",
									"type": "Expression"
								},
								"TargetPrefix": {
									"value": "@pipeline().parameters.CsvPrefix",
									"type": "Expression"
								},
								"SourceFilename": {
									"value": "@pipeline().parameters.SourceFilename",
									"type": "Expression"
								},
								"TargetFilename": {
									"value": "@concat(pipeline().parameters.TargetFilename, '.', pipeline().parameters.CsvPrefix)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "xlsx2json_pipe2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "xlsx2csv_pipe1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_xlsx2json",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "xlsx2parquet_pipe3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "xlsx2json_pipe2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_xlxs2parquet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceContainer": {
						"type": "string",
						"defaultValue": "sources"
					},
					"SourcePrefix": {
						"type": "string",
						"defaultValue": "OriginalFiles"
					},
					"SourceFilename": {
						"type": "string",
						"defaultValue": "ForecastData.xlsx"
					},
					"TargetContainer": {
						"type": "string",
						"defaultValue": "targets"
					},
					"JsonPrefix": {
						"type": "string",
						"defaultValue": "json"
					},
					"CsvPrefix": {
						"type": "string",
						"defaultValue": "csv"
					},
					"ParquetPrefix": {
						"type": "string",
						"defaultValue": "parquet"
					},
					"TargetFilename": {
						"type": "string",
						"defaultValue": "DaForecast"
					},
					"DbName": {
						"type": "string",
						"defaultValue": "TTraining"
					},
					"DbTable": {
						"type": "string",
						"defaultValue": "Forecast"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-18T14:04:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ex 18 full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Json Files Events",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "JsonFiles",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.eventsSourceFolder",
										"type": "Expression"
									},
									"filePattern": "*.json"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Json Files Events",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Json Files Events').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run pipeline to convert JSON",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Ex 18 aux - Json 2 Parquet then Table",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"sourceFolder": "OriginalFiles/Events",
											"stagingFolder": "StagingEvents",
											"sourceJsonFile": {
												"value": "@item().name",
												"type": "Expression"
											},
											"sinkTablename": {
												"value": "@pipeline().parameters.sinkTableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy to Database",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.eventsStagingFolder",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ParquetDirectory",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.eventsStagingFolder",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlGenericTable",
								"type": "DatasetReference",
								"parameters": {
									"Schema": {
										"value": "@pipeline().parameters.sinkTableSchema",
										"type": "Expression"
									},
									"Table": {
										"value": "@pipeline().parameters.sinkTableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"eventsSourceFolder": {
						"type": "string",
						"defaultValue": "OriginalFiles/Events"
					},
					"eventsStagingFolder": {
						"type": "string",
						"defaultValue": "StagingEvents"
					},
					"sinkTableSchema": {
						"type": "string",
						"defaultValue": "TTraining"
					},
					"sinkTableName": {
						"type": "string",
						"defaultValue": "Events"
					}
				},
				"folder": {
					"name": "data flow pipes"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-01T15:41:30Z"
			},
			"dependsOn": []
		}
	]
}